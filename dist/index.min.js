const Axios=require("axios"),_=require("lodash");module.exports={baseUrl:"https://api.coaster.cloud",withAcl:!1,language:"en",async getParks(a={}){let b=null;try{let c=await Axios.get(this.baseUrl+"/parks"+this.buildQuery(a));b=c.data}catch(a){console.error(a)}return b},async getPark(a,b={}){let c=null;try{let d=await Axios.get(this.baseUrl+"/parks/"+a+this.buildQuery(b));c=d.data}catch(a){console.error(a)}return c},async getWaitingTimes(a,b={}){let c=null;try{let d=await Axios.get(this.baseUrl+"/parks/"+a+"/waiting-times"+this.buildQuery(b));c=d.data}catch(a){console.error(a)}return c},async getAttractions(a={}){let b=null,c=null;c=a.hasOwnProperty("park")&&a.park?this.baseUrl+"/parks/"+a.park+"/attractions":this.baseUrl+"/attractions";try{let d=await Axios.get(c+this.buildQuery(a));b=d.data}catch(a){console.error(a)}return b},async getAttraction(a,b={}){let c=null;try{let d=await Axios.get(this.baseUrl+"/attractions/"+a+this.buildQuery(b));c=d.data}catch(a){console.error(a)}return c},async addWaitingTimes(a,b,c){let d=!1;try{await Axios.post(this.baseUrl+"/parks/"+b+"/waiting-times",c,{headers:{"X-Auth-Token":a}}),d=!0}catch(a){console.error(a)}return d},buildQuery(a){let b=[];if(a.hasOwnProperty("page")&&a.page&&b.push("page="+encodeURIComponent(a.page)),a.hasOwnProperty("itemsPerPage")&&a.itemsPerPage&&b.push("itemsPerPage="+encodeURIComponent(a.itemsPerPage)),a.hasOwnProperty("searchTerm")&&a.searchTerm&&b.push("search="+encodeURIComponent(a.searchTerm)),a.hasOwnProperty("language")&&a.language?b.push("language="+encodeURIComponent(a.language)):b.push("language="+encodeURIComponent(this.language)),a.hasOwnProperty("sort")&&a.sort&&b.push("sort="+encodeURIComponent(a.sort)),a.hasOwnProperty("regulation")){let c=_.merge({size:null,age:null},a.regulation);if(null!==c.size||null!==c.age){let a=/^\d+$/.test(c.size)?c.size:"null",d=/^\d+$/.test(c.age)?c.age:"null";b.push("filter[]="+encodeURIComponent(`regulation(${a},${d})`))}}if(a.hasOwnProperty("facets")&&a.facets.forEach(function(a){b.push("facet[]="+encodeURIComponent(a))}),a.hasOwnProperty("filters")&&a.filters.forEach(function(a){b.push("filter[]="+encodeURIComponent(a))}),a.hasOwnProperty("founded")&&null!==a.founded&&/^\d{4}$/.test(a.founded)){let c=a.founded;b.push("filter[]="+encodeURIComponent(`founded.year:${c}`))}return!0===this.withAcl&&b.push("acl=true"),0<b.length?"?"+b.join("&"):""}};